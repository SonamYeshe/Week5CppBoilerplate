viki@ubuntu:~/Week5/cpp-boilerplate/build2/app$ valgrind ./shell-app
==2904== Memcheck, a memory error detector
==2904== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2904== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2904== Command: ./shell-app
==2904== 
Averaged sensor reading: 10
==2904== Conditional jump or move depends on uninitialised value(s)
==2904==    at 0x401DC7: main (main.cpp:9)
==2904== 
==2904== 
==2904== HEAP SUMMARY:
==2904==     in use at exit: 72,748 bytes in 3 blocks
==2904==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==2904== 
==2904== LEAK SUMMARY:
==2904==    definitely lost: 24 bytes in 1 blocks
==2904==    indirectly lost: 20 bytes in 1 blocks
==2904==      possibly lost: 0 bytes in 0 blocks
==2904==    still reachable: 72,704 bytes in 1 blocks
==2904==         suppressed: 0 bytes in 0 blocks
==2904== Rerun with --leak-check=full to see details of leaked memory
==2904== 
==2904== For counts of detected and suppressed errors, rerun with: -v
==2904== Use --track-origins=yes to see where uninitialised values come from
==2904== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


viki@ubuntu:~/Week5/cpp-boilerplate/build2/app$ valgrind --leak-check=full ./shell-app
==3026== Memcheck, a memory error detector
==3026== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3026== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3026== Command: ./shell-app
==3026== 
Averaged sensor reading: 10
==3026== Conditional jump or move depends on uninitialised value(s)
==3026==    at 0x401DC7: main (main.cpp:9)
==3026== 
==3026== 
==3026== HEAP SUMMARY:
==3026==     in use at exit: 72,748 bytes in 3 blocks
==3026==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==3026== 
==3026== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==3026==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3026==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==3026==    by 0x401D9A: main (main.cpp:7)
==3026== 
==3026== LEAK SUMMARY:
==3026==    definitely lost: 24 bytes in 1 blocks
==3026==    indirectly lost: 20 bytes in 1 blocks
==3026==      possibly lost: 0 bytes in 0 blocks
==3026==    still reachable: 72,704 bytes in 1 blocks
==3026==         suppressed: 0 bytes in 0 blocks
==3026== Reachable blocks (those to which a pointer was found) are not shown.
==3026== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3026== 
==3026== For counts of detected and suppressed errors, rerun with: -v
==3026== Use --track-origins=yes to see where uninitialised values come from
==3026== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)



viki@ubuntu:~/Week5/cpp-boilerplate/build2/app$ valgrind --leak-check=full --show-leak-kinds=all ./shell-app
==3393== Memcheck, a memory error detector
==3393== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3393== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==3393== Command: ./shell-app
==3393== 
Averaged sensor reading: 10
DONE
==3393== 
==3393== HEAP SUMMARY:
==3393==     in use at exit: 72,748 bytes in 3 blocks
==3393==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==3393== 
==3393== 20 bytes in 1 blocks are indirectly lost in loss record 1 of 3
==3393==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3393==    by 0x40265F: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==3393==    by 0x4025CC: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==3393==    by 0x40252D: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==3393==    by 0x402422: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:185)
==3393==    by 0x40226E: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:136)
==3393==    by 0x4020A5: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:291)
==3393==    by 0x401F0A: AnalogSensor::Read() (AnalogSensor.cpp:16)
==3393==    by 0x401D9A: main (main.cpp:7)
==3393== 
==3393== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==3393==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3393==    by 0x401EEE: AnalogSensor::Read() (AnalogSensor.cpp:16)
==3393==    by 0x401D9A: main (main.cpp:7)
==3393== 
==3393== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==3393==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3393==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==3393==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==3393==    by 0x40107CA: call_init (dl-init.c:30)
==3393==    by 0x40107CA: _dl_init (dl-init.c:120)
==3393==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==3393== 
==3393== LEAK SUMMARY:
==3393==    definitely lost: 24 bytes in 1 blocks
==3393==    indirectly lost: 20 bytes in 1 blocks
==3393==      possibly lost: 0 bytes in 0 blocks
==3393==    still reachable: 72,704 bytes in 1 blocks
==3393==         suppressed: 0 bytes in 0 blocks
==3393== 
==3393== For counts of detected and suppressed errors, rerun with: -v
==3393== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
